{"version":3,"file":"static/js/792.b847ffc7.chunk.js","mappings":"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","sources":["components/Common/Button/DeleteButton.jsx","components/MobTable/MobTable.styled.js","components/MobTable/MobTable.jsx","components/Summary/Summary.styled.js","components/Summary/Summary.jsx","components/Table/TableRow/TableRow.styled.js","components/Table/TableRow/TableRow.jsx","components/Table/Table.styled.js","components/Table/Table.jsx","components/transactions/Expenses.jsx","components/transactions/Transactions.styled.js"],"sourcesContent":["import Modal from 'components/Modal';\nimport ModalContent from 'components/Modal/ModalContent/ModalContent';\nimport { useState } from 'react';\nimport { Button } from './Button.styled';\n\nexport const DeleteButton = ({ onClick, children }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const clickHandler = () => {\n    closeModalHandler();\n    onClick();\n  };\n\n  const openModalHandler = () => {\n    setIsModalVisible(true);\n  };\n\n  const closeModalHandler = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <>\n      <Button type=\"button\" onClick={openModalHandler}>\n        {children}\n      </Button>\n      {isModalVisible && (\n        <Modal onClose={closeModalHandler}>\n          <ModalContent\n            message={`Are you sure?`}\n            onClose={closeModalHandler}\n            onClick={clickHandler}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { IoTrashOutline } from 'react-icons/io5';\n\nexport const Icon = styled(IoTrashOutline)`\n  width: 15px;\n  height: 18px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  padding: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border: none;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 50%;\n  transition: ${({ theme }) => theme.transitions.create(['background-color'])};\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.grey.light};\n  }\n`;\n\nexport const List = styled.ul`\n  width: 100%;\n\n  padding: 0;\n\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const DescrWrapper = styled.div`\n  margin-right: 10px;\n`;\n\nexport const Descr = styled.h4`\n  margin: 0;\n  margin-bottom: 3px;\n\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  font-size: ${({ theme }) => theme.fontSizes[2]}px;\n  line-height: ${({ theme }) => theme.lineHeights.base};\n\n  letter-spacing: ${({ theme }) => theme.letterSpacings.base};\n\n  color: ${({ theme }) => theme.colors.grey.dark};\n`;\n\nexport const Content = styled.p`\n  margin: 0;\n\n  font-weight: 400;\n  font-size: ${({ theme }) => theme.fontSizes[0]};\n  line-height: 1.12;\n`;\n\nexport const Amount = styled(Content)`\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  font-size: ${({ theme }) => theme.fontSizes[2]};\n  line-height: ${({ theme }) => theme.lineHeights.base};\n  color: ${({ theme, amount }) =>\n    amount < 0 ? theme.colors.red.dark : theme.colors.green.base};\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  padding-top: 8px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.lilac.base};\n`;\n\nconst FlexDiv = styled.div`\n  display: flex;\n`;\n\nexport const CategoryWrapper = styled(FlexDiv)`\n  gap: 20px;\n`;\n\nexport const EmountWrapper = styled(FlexDiv)`\n  gap: 20px;\n  align-items: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteTransactionThunk } from 'redux/transactions/transactions.thunk';\nimport { convertMoneyToStringWithCurrency } from 'helpers';\nimport {\n  Item,\n  CategoryWrapper,\n  EmountWrapper,\n  List,\n  Descr,\n  Content,\n  Amount,\n  Icon,\n  DescrWrapper,\n} from './MobTable.styled';\nimport { selectSortedAllTransactionsData } from 'redux/transactions/transactions.selectors';\nimport { DeleteButton } from 'components/Common/Button';\n\nexport default function MobTable() {\n  const dispatch = useDispatch();\n  const data = useSelector(selectSortedAllTransactionsData);\n\n  return (\n    <List>\n      {data.map(income => {\n        const { date, description, category, amount, _id } = income;\n        return (\n          <Item key={_id}>\n            <DescrWrapper>\n              <Descr>{description}</Descr>\n              <CategoryWrapper>\n                <Content>{date}</Content>\n                <Content>{category}</Content>\n              </CategoryWrapper>\n            </DescrWrapper>\n            <EmountWrapper>\n              <Amount amount={amount}>\n                {convertMoneyToStringWithCurrency(amount)}\n              </Amount>\n              <DeleteButton\n                onClick={() => dispatch(deleteTransactionThunk(_id))}\n              >\n                <Icon />\n              </DeleteButton>\n            </EmountWrapper>\n          </Item>\n        );\n      })}\n    </List>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Tr = styled.tr`\n  border: 2px solid ${({ theme }) => theme.colors.white};\n`;\n\nexport const Table = styled.table`\n  margin-top: 30px;\n  width: 213px;\n\n  background-color: ${({ theme }) => theme.colors.grey.light};\n`;\n\nexport const Wrapper = styled.div`\n  width: 213px;\n`;\n\nexport const ListHead = styled.h3`\n  text-align: center;\n  margin-bottom: 0px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n\n  background-color: ${({ theme }) => theme.colors.grey.light};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.white};\n  border-top-right-radius: 15px;\n  border-top-left-radius: 15px;\n\n  text-transform: uppercase;\n\n  font-size: ${({ theme }) => theme.fontSizes[2]};\n  line-height: ${({ theme }) => theme.lineHeights.base};\n\n  color: ${({ theme }) => theme.colors.black};\n`;\n\nexport const List = styled.ul`\n  width: 213px;\n  margin-bottom: 0px;\n  margin-top: 0;\n  padding-left: 0;\n\n  overflow: hidden;\n\n  background-color: ${({ theme }) => theme.colors.grey.light};\n  border-bottom-right-radius: 15px;\n\n  font-size: ${({ theme }) => theme.fontSizes[2]};\n  line-height: ${({ theme }) => theme.lineHeights.base};\n  letter-spacing: ${({ theme }) => theme.letterSpacings.base};\n  text-transform: uppercase;\n\n  color: ${({ theme }) => theme.colors.grey.dark};\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding-right: 13px;\n  padding-left: 13px;\n\n  padding-top: 12px;\n  padding-bottom: 12px;\n\n  background-color: ${({ theme }) => theme.colors.grey.light};\n  border-top: 2px solid ${({ theme }) => theme.colors.white};\n`;\n","import { List, Item, ListHead, Wrapper } from './Summary.styled';\nimport { convertMoneyToString } from 'helpers';\nimport { subMonths, format } from 'date-fns';\n\nfunction getLastMonths(stats, monthQuantity = 6) {\n  const newStats = [];\n  const date = new Date();\n\n  for (let i = 0; i < monthQuantity; i += 1) {\n    const newDate = subMonths(date, i);\n    const month = format(newDate, 'MMMM');\n    const foundMonth = stats.find(m => m.month === month);\n\n    if (!foundMonth) {\n      newStats.push({\n        id: newDate.getMonth() + 1,\n        month: format(newDate, 'MMMM'),\n        amount: 0,\n      });\n    } else {\n      newStats.push(foundMonth);\n    }\n  }\n\n  return newStats;\n}\n\nexport default function Summary({ stats }) {\n  return (\n    <Wrapper>\n      <ListHead>Summary</ListHead>\n\n      <List>\n        {getLastMonths(stats).map(stat => (\n          <Item key={stat.id}>\n            <p>{stat.month}</p>\n            <p>{convertMoneyToString(stat.amount)}</p>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  );\n}\n","import { IoTrashOutline } from 'react-icons/io5';\nimport styled from 'styled-components';\n\nexport const Icon = styled(IoTrashOutline)`\n  width: 15px;\n  height: 18px;\n`;\n\nexport const Tr = styled.tr`\n  height: 40px;\n  width: 100%;\n\n  display: flex;\n\n  border-bottom: 2px solid ${({ theme }) => theme.colors.grey.light};\n`;\n\nexport const Td = styled.td`\n  color: ${({ theme }) => theme.colors.grey.dark};\n  font-weight: ${({ theme }) => theme.fontWeights.regular};\n\n  display: flex;\n  align-items: center;\n  padding-left: 10px;\n\n  &:nth-child(1) {\n    width: 20%;\n  }\n  &:nth-child(2) {\n    width: 30%;\n  }\n  &:nth-child(3) {\n    justify-content: center;\n    width: 20%;\n  }\n  &:nth-child(4) {\n    width: 20%;\n    justify-content: center;\n  }\n  &:nth-child(5) {\n    width: 10%;\n    justify-content: center;\n  }\n`;\n\nexport const ExpenseTd = styled(Td)`\n  color: ${({ theme, amount }) =>\n    amount < 0 ? theme.colors.red.base : theme.colors.green.base};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n\nexport const Ttrash = styled(Td)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border: none;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 50%;\n\n  transition: ${({ theme }) => theme.transitions.create(['background-color'])};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.grey.light};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Tr, Td, Icon, Ttrash, ExpenseTd } from './TableRow.styled';\nimport { deleteTransactionThunk } from 'redux/transactions/transactions.thunk';\nimport { convertMoneyToStringWithCurrency } from 'helpers';\nimport { DeleteButton } from 'components/Common/Button';\n\nexport const TableRow = ({ date, description, category, amount, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Tr>\n      <Td>{date}</Td>\n      <Td>{description}</Td>\n      <Td>{category}</Td>\n      <ExpenseTd amount={amount}>\n        {convertMoneyToStringWithCurrency(amount)}\n      </ExpenseTd>\n      <Ttrash trash>\n        <DeleteButton onClick={() => dispatch(deleteTransactionThunk(id))}>\n          <Icon />\n        </DeleteButton>\n      </Ttrash>\n    </Tr>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'theme';\n\nexport const TableWrapper = styled.div`\n  width: 624px;\n  @media screen and (min-width: ${theme.breakpoints[2]}) {\n    width: 746px;\n  }\n`;\n\nexport const TbodyWrapper = styled.div`\n  //height: 344px;\n`;\n\nexport const StyledTable = styled.table`\n  width: 100%;\n\n  border-radius: 10px;\n  border-collapse: collapse;\n  position: relative;\n  text-align: center;\n  font-size: ${theme.fontSizes[2]};\n`;\n\nexport const TheadWrapper = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n\n  overflow: hidden;\n`;\n\nexport const HeadRow = styled.tr`\n  display: flex;\n  width: 100%;\n`;\n\nexport const Thead = styled.thead`\n  width: 100%;\n  display: block;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  background-color: ${theme.colors.grey.light};\n\n  text-transform: uppercase;\n`;\n\nexport const Th = styled.th`\n  padding: 10px;\n\n  display: flex;\n  align-items: center;\n  &:nth-child(1) {\n    width: 20%;\n    padding-left: 20px;\n\n    @media screen and (min-width: ${theme.breakpoints[2]}) {\n      padding-left: 28px;\n    }\n  }\n  &:nth-child(2) {\n    width: 30%;\n\n    @media screen and (min-width: ${theme.breakpoints[2]}) {\n      padding-left: 20px;\n    }\n  }\n  &:nth-child(3) {\n    justify-content: center;\n    width: 20%;\n  }\n  &:nth-child(4) {\n    justify-content: center;\n    width: 20%;\n  }\n  &:nth-child(5) {\n    width: 10%;\n  }\n`;\n\nexport const TBody = styled.tbody`\n  display: block;\n  width: 100%;\n  height: 348px;\n\n  border: 2px solid ${theme.colors.grey.light};\n\n  overflow-y: auto;\n  scrollbar-gutter: both-edges;\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  &::-webkit-scrollbar-track {\n    background-color: ${theme.colors.grey.light};\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n    background-color: ${theme.colors.orange.base};\n  }\n`;\n","import { TableRow } from './TableRow/TableRow';\n\nimport {\n  StyledTable,\n  Thead,\n  TableWrapper,\n  Th,\n  TBody,\n  TbodyWrapper,\n  HeadRow,\n} from './Table.styled';\n\nconst Table = ({ data }) => {\n  return (\n    <TableWrapper>\n      <TbodyWrapper>\n        <StyledTable>\n          <Thead>\n            <HeadRow>\n              <Th>Date</Th>\n              <Th>Descripton</Th>\n              <Th>Category</Th>\n              <Th>Sum</Th>\n              <Th></Th>\n            </HeadRow>\n          </Thead>\n          <TBody>\n            {data.map(expense => {\n              const { date, description, category, amount, _id } = expense;\n              return (\n                <TableRow\n                  key={_id}\n                  date={date}\n                  description={description}\n                  category={category}\n                  amount={amount}\n                  id={_id}\n                />\n              );\n            })}\n          </TBody>\n        </StyledTable>\n      </TbodyWrapper>\n    </TableWrapper>\n  );\n};\nexport default Table;\n","import { useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport {\n  selectExpensesData,\n  selectExpensesSortedLastSixMonths,\n} from 'redux/transactions/transactions.selectors';\nimport { addExpenseThunk } from 'redux/transactions/transactions.thunk';\nimport { Box } from 'components/Box/Box.styled';\n\nimport { AddingExpensessArea } from 'components/AddingExpensessArea/AddingExpensessArea';\nimport Table from 'components/Table';\n\nimport { TransactionsDataWrapper } from './Transactions.styled';\nimport { theme } from 'theme';\nimport MobTable from 'components/MobTable';\nimport Summary from 'components/Summary';\nimport { selectExpensesCategories } from '../../redux/transactions/transactions.selectors';\n\nexport default function Expenses() {\n  const isMobile = useMediaQuery({\n    query: `(max-width: calc(${theme.breakpoints[1]} - 1px))`,\n  });\n  const data = useSelector(selectExpensesData);\n  const stats = useSelector(selectExpensesSortedLastSixMonths);\n  const categories = useSelector(selectExpensesCategories);\n\n  return (\n    <Box>\n      {isMobile ? (\n        <MobTable />\n      ) : (\n        <>\n          <AddingExpensessArea\n            categories={categories}\n            addFunction={addExpenseThunk}\n          />\n          <TransactionsDataWrapper>\n            <Table data={data} />\n            {!isMobile && <Summary stats={stats} />}\n          </TransactionsDataWrapper>\n        </>\n      )}\n    </Box>\n  );\n}\n","import { Box } from 'components/Box/Box.styled';\nimport styled from 'styled-components';\n\nexport const TransactionsDataWrapper = styled(Box)`\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    display: flex;\n    gap: 40px;\n    flex-direction: column;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n"],"names":["DeleteButton","onClick","children","useState","isModalVisible","setIsModalVisible","closeModalHandler","type","Modal","onClose","ModalContent","message","Icon","styled","IoTrashOutline","List","theme","colors","white","transitions","create","grey","light","DescrWrapper","Descr","fontWeights","bold","fontSizes","lineHeights","base","letterSpacings","dark","Content","Amount","amount","red","green","Item","lilac","FlexDiv","CategoryWrapper","EmountWrapper","MobTable","dispatch","useDispatch","data","useSelector","selectSortedAllTransactionsData","map","income","date","description","category","_id","convertMoneyToStringWithCurrency","deleteTransactionThunk","Wrapper","ListHead","black","getLastMonths","stats","monthQuantity","newStats","Date","i","newDate","subMonths","month","format","foundMonth","find","m","push","id","getMonth","Summary","stat","convertMoneyToString","Tr","Td","regular","ExpenseTd","Ttrash","TableRow","trash","TableWrapper","TbodyWrapper","StyledTable","HeadRow","Thead","Th","TBody","expense","Expenses","isMobile","useMediaQuery","query","selectExpensesData","selectExpensesSortedLastSixMonths","categories","selectExpensesCategories","addFunction","addExpenseThunk","TransactionsDataWrapper","Box","breakpoints","tablet","desktop"],"sourceRoot":""}